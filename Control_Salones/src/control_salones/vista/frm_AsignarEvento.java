/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package control_salones.vista;

import control_salones.controlador.AsignacionEventoControllador;
import control_salones.modelo.Instructor;
import control_salones.modelo.EstadoEvento;
import control_salones.modelo.Evento;
import control_salones.modelo.Horario;
import control_salones.modelo.Salon;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author efiapp
 */
public class frm_AsignarEvento extends javax.swing.JFrame {

    /**
     * Creates new form frm_AsignarEvento
     */
    public frm_AsignarEvento() {
        initComponents();
    }
    private DefaultComboBoxModel<Salon> modeloCombo;
    private DefaultComboBoxModel<Horario> modeloComboHorario;
    private DefaultComboBoxModel<Instructor> modeloComboInstructor;
    private DefaultComboBoxModel<Evento> modeloComboEvento;
    private DefaultComboBoxModel<EstadoEvento> modeloComboEstadoEvento;
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("E, dd MMM yyyy");
    private DefaultListModel modeloLista = new DefaultListModel();
    DefaultTableModel tm = new DefaultTableModel(0, 1) {
        @Override
        public boolean isCellEditable(int row, int column) {
            if (0 == column) {
                return false;
            }
            return super.isCellEditable(row, column);
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboSalones = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboEvento = new javax.swing.JComboBox<>();
        comboInstructor = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboEstado = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        dt_FechaI = new com.github.lgooddatepicker.components.DatePicker();
        dt_FechaF = new com.github.lgooddatepicker.components.DatePicker();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbHorario_1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cmbHorario_2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        cb_dia_lunes = new javax.swing.JCheckBox();
        cb_dia_Martes = new javax.swing.JCheckBox();
        cb_dia_Miercoles = new javax.swing.JCheckBox();
        cb_dia_Jueves = new javax.swing.JCheckBox();
        cb_dia_Viernes = new javax.swing.JCheckBox();
        cb_dia_Sabado = new javax.swing.JCheckBox();
        cb_dia_Domingo = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable(tm){
            @Override
            public void changeSelection(int rowIndex, int columnIndex,
                boolean toggle, boolean extend) {
                if (columnIndex == 0)
                super.changeSelection(rowIndex, columnIndex + 1, toggle,
                    extend);
                else
                super.changeSelection(rowIndex, columnIndex, toggle,
                    extend);
            }
        };
        ;
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Seleccionar salón: ");

        modeloCombo = new DefaultComboBoxModel(new Salon [] {});
        comboSalones.setModel(modeloCombo);

        jLabel2.setText("Seleccionar evento: ");

        modeloComboEvento = new DefaultComboBoxModel(new Evento [] {});
        comboEvento.setModel(modeloComboEvento);

        modeloComboInstructor = new DefaultComboBoxModel(new Instructor [] {});
        comboInstructor.setModel(modeloComboInstructor);

        jLabel3.setText("Seleccionar instructor:");

        jLabel4.setText("Estado del evento:");

        modeloComboEstadoEvento = new DefaultComboBoxModel(new EstadoEvento [] {});
        comboEstado.setModel(modeloComboEstadoEvento);

        jLabel5.setText("Fecha de inicio:");

        jLabel6.setText("Fecha final:");

        jLabel7.setText("Hora de inicio:");

        modeloComboHorario = new DefaultComboBoxModel(new Horario [] {});
        cmbHorario_1.setModel(modeloComboHorario);

        jLabel8.setText("Hora final:");

        modeloComboHorario = new DefaultComboBoxModel(new Horario [] {});
        cmbHorario_2.setModel(modeloComboHorario);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Días a laborar"));

        cb_dia_lunes.setText("Lunes");

        cb_dia_Martes.setText("Martes");

        cb_dia_Miercoles.setSelected(true);
        cb_dia_Miercoles.setText("Miércoles");

        cb_dia_Jueves.setText("Jueves");

        cb_dia_Viernes.setSelected(true);
        cb_dia_Viernes.setText("Viernes");

        cb_dia_Sabado.setText("Sábado");

        cb_dia_Domingo.setText("Domingo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cb_dia_lunes)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(cb_dia_Sabado)
                        .addGap(18, 18, 18)
                        .addComponent(cb_dia_Domingo)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cb_dia_Martes)
                        .addGap(18, 18, 18)
                        .addComponent(cb_dia_Miercoles)
                        .addGap(18, 18, 18)
                        .addComponent(cb_dia_Jueves)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(cb_dia_Viernes))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_dia_lunes)
                    .addComponent(cb_dia_Martes)
                    .addComponent(cb_dia_Miercoles)
                    .addComponent(cb_dia_Jueves)
                    .addComponent(cb_dia_Viernes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_dia_Sabado)
                    .addComponent(cb_dia_Domingo)))
        );

        jLabel9.setText("Duración del evento:");

        jSpinner1.setValue(21);

        table.setModel(tm);
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        table.getColumnModel().getColumn(0).setCellRenderer(
            table.getTableHeader().getDefaultRenderer());
        jScrollPane1.setViewportView(table);

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Cantidad de horas por sesión");

        jSpinner2.setValue(4);

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setModel(modeloLista);
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboSalones, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(comboInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(76, 76, 76)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbHorario_1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dt_FechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel8))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cmbHorario_2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(dt_FechaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(18, 18, 18)
                                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)))
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane2))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(comboSalones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(comboInstructor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dt_FechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dt_FechaF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(cmbHorario_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(cmbHorario_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        dt_FechaI.setDateToToday();
        dt_FechaF.setDateToToday();

        AsignacionEventoControllador aec = new AsignacionEventoControllador();
        for (Salon obtenerSalone : aec.obtenerSalones()) {
            //modeloCombo.addElement(obtenerSalone.getNombre_salon());
            comboSalones.addItem(obtenerSalone);
        }
        for (Evento evento : aec.obtenerEventos()) {
            comboEvento.addItem(evento);
        }
        for (Instructor instructor : aec.obtenerInstructor()) {
            comboInstructor.addItem(instructor);
        }
        for (EstadoEvento estado : aec.obtenerEstadoEvento()) {
            comboEstado.addItem(estado);
        }
        for (Horario horario : aec.obtenerHorario()) {
            cmbHorario_1.addItem(horario);
            cmbHorario_2.addItem(horario);
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LocalDate localDate = LocalDate.of(2018, 05, 1);
        modeloLista.addElement(formatter.format(localDate));
        localDate = LocalDate.of(2018, 06, 20);
        modeloLista.addElement(formatter.format(localDate));
        ArrayList<LocalDate> listaDiasNoLaborales = new ArrayList<>();
        for (int i = 0; i < modeloLista.getSize(); i++) {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("E, dd MMM yyyy");
            LocalDate date = LocalDate.parse(modeloLista.getElementAt(i).toString(), dtf);
            listaDiasNoLaborales.add(date);
        }
        System.out.println(listaDiasNoLaborales);

        crearColumnas(listaDiasNoLaborales);
        crearFilas();
        llenarCeldas();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton2ActionPerformed
    private void crearColumnas(ArrayList<LocalDate> listaDiasNoLaborales) {
        ArrayList<String> listaDias = new ArrayList<>();
        if (cb_dia_lunes.isSelected()) {
            listaDias.add("MONDAY");
        }
        if (cb_dia_Martes.isSelected()) {
            listaDias.add("TUESDAY");
        }
        if (cb_dia_Miercoles.isSelected()) {
            listaDias.add("WEDNESDAY");
        }
        if (cb_dia_Jueves.isSelected()) {
            listaDias.add("THURSDAY");
        }
        if (cb_dia_Viernes.isSelected()) {
            listaDias.add("FRIDAY");
        }
        if (cb_dia_Sabado.isSelected()) {
            listaDias.add("SATURDAY");
        }
        if (cb_dia_Domingo.isSelected()) {
            listaDias.add("SUNDAY");
        }
        Integer cantidadHoras = (Integer) (jSpinner1.getValue());
        Integer cantidadSesion = (Integer) (jSpinner2.getValue());
        LocalDate fechaI = dt_FechaI.getDate();
        Integer cantidadDias = cantidadHoras / cantidadSesion;
        Integer resto = cantidadHoras % cantidadSesion;
        ArrayList<String> listaFechas = new ArrayList<>();
        while (cantidadDias != 0) {
            for (String dia : listaDias) {
                if (fechaI.getDayOfWeek().toString().equals(dia)) {
                    if (!fechaNoLaboral(listaDiasNoLaborales, fechaI)){
                        tm.addColumn(formatter.format(fechaI));
                        cantidadDias--;
                    }
                    

                }
            }
            fechaI = fechaI.plusDays(1L);
            if (cantidadDias == 0) {
                if (resto != 0) {
                    cantidadDias = 1;
                    resto = 0;
                }
            }
        }

    }

    private boolean fechaNoLaboral(ArrayList<LocalDate> listaDiasNoLaborales, LocalDate fecha) {
        boolean respuesta = false;
        for (LocalDate aux : listaDiasNoLaborales) {
            if (aux.equals(fecha)) {
                respuesta = true;
            }
        }
        return respuesta;
    }

    private void crearFilas() {
        Integer cantidadSesion = (Integer) (jSpinner2.getValue());
        Integer hora = 7;
        for (int i = 1; i <= cantidadSesion; i++) {
            Object[] rowData = {hora.toString() + ":00"};
            hora++;
            tm.addRow(rowData);
        }
    }

    private void llenarCeldas() {
        Integer cantidadHoras = (Integer) (jSpinner1.getValue());
        Integer cantidadSesion = (Integer) (jSpinner2.getValue());
        LocalDate fechaI = dt_FechaI.getDate();
        Integer cantidadDias = cantidadHoras / cantidadSesion;
        Integer resto = cantidadHoras % cantidadSesion;
        if (resto != 0) {
            cantidadDias = cantidadDias + 1;
        }
        int contador = cantidadHoras;
        for (int i = 1; i <= cantidadDias; i++) {
            for (int j = 0; j < cantidadSesion; j++) {
                tm.setValueAt("201", j, i);
                contador--;
                System.out.println(contador);
                if (contador == 0) {
                    break;
                }
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_AsignarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_AsignarEvento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cb_dia_Domingo;
    private javax.swing.JCheckBox cb_dia_Jueves;
    private javax.swing.JCheckBox cb_dia_Martes;
    private javax.swing.JCheckBox cb_dia_Miercoles;
    private javax.swing.JCheckBox cb_dia_Sabado;
    private javax.swing.JCheckBox cb_dia_Viernes;
    private javax.swing.JCheckBox cb_dia_lunes;
    private javax.swing.JComboBox<Horario> cmbHorario_1;
    private javax.swing.JComboBox<Horario> cmbHorario_2;
    private javax.swing.JComboBox<EstadoEvento> comboEstado;
    private javax.swing.JComboBox<Evento> comboEvento;
    private javax.swing.JComboBox<Instructor> comboInstructor;
    private javax.swing.JComboBox<Salon> comboSalones;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private com.github.lgooddatepicker.components.DatePicker dt_FechaF;
    private com.github.lgooddatepicker.components.DatePicker dt_FechaI;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
